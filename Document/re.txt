re.search（查找的字符（可以是正则表达式），被查找的字符串，flags=0)
在字符串中查找，是否能匹配正则表达式。返回_sre.SRE_Match对象，如果不能匹配返回None。

re.match（查找的字符（可以是正则表达式），被查找的字符串，flags=0）
字符串的开头是否能匹配正则表达式。返回_sre.SRE_Match对象，如果不能匹配返回None。

re.split(分隔的字符, 被查找的字符串, maxsplit=0)
通过正则表达式将字符串分离。如果用括号将正则表达式括起来，那么匹配的字符串也会被列入到list中返回（也就是说包括标点符号）。maxsplit是分离的次数，maxsplit=1分离一次，默认为0，不限制次数。

re.findall(查找的字符（可以是正则表达式），被查找的字符串，flags=0)
找到 RE 匹配的所有子串，并把它们作为一个列表返回。这个匹配是从左到右有序地返回。如果无匹配，返回空列表。

re.finditer(查找的字符（可以是正则表达式），被查找的字符串，flags=0)
找到 RE 匹配的所有子串，并把它们作为一个迭代器返回。这个匹配是从左到右有序地返回。如果无匹配，返回空列表。

re.sub(查找的字符（可以是正则表达式），替换的字符，被查找的字符串，count=0,flags=0)
找到 RE 匹配的所有子串，并将其用一个不同的字符串替换。可选参数 count 是模式匹配後替换的最大次数；count 必须是非负整数。缺省值是 0 表示替换所有的匹配。如果无匹配，字符串将会无改变地返回。

re.subn(查找的字符（可以是正则表达式），替换的字符，被查找的字符串，count=0,flags=0)
与re.sub方法作用一样，但返回的是包含新字符串和替换执行次数的两元组。（多增加执行次数）

re.escape(字符串)
对字符串中所有的符号添加转移符\

re.purge()
清空缓存中的正则表达式
